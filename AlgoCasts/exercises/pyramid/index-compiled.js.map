{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,OAAT,CAAiB,CAAjB,EAAoB;AAChB,UAAM,WAAW,KAAK,KAAL,CAAW,CAAC,IAAI,CAAJ,GAAQ,CAAT,IAAc,CAAzB,CAAjB;AACA,SAAI,IAAI,MAAM,CAAd,EAAiB,MAAM,CAAvB,EAA0B,KAA1B,EAAgC;AAC5B,YAAI,QAAQ,EAAZ;;AAEA,aAAI,IAAI,SAAS,CAAjB,EAAoB,SAAS,IAAI,CAAJ,GAAQ,CAArC,EAAwC,QAAxC,EAAiD;AAC7C,gBAAG,WAAW,GAAX,IAAkB,MAAlB,IAA4B,WAAW,GAAX,IAAkB,MAAjD,EAAwD;AACpD,yBAAS,GAAT;AACH,aAFD,MAEK;AACD,yBAAS,GAAT;AACH;AACJ;AACD,gBAAQ,GAAR,CAAY,KAAZ;AACH;AACJ;;AAED,OAAO,OAAP,GAAiB,OAAjB","file":"index-compiled.js","sourcesContent":["// --- Directions\r\n// Write a function that accepts a positive number N.\r\n// The function should console log a pyramid shape\r\n// with N levels using the # character.  Make sure the\r\n// pyramid has spaces on both the left *and* right hand sides\r\n// --- Examples\r\n//   pyramid(1)\r\n//       '#'\r\n//   pyramid(2)\r\n//       ' # '\r\n//       '###'\r\n//   pyramid(3)\r\n//       '  #  '\r\n//       ' ### '\r\n//       '#####'\r\n\r\nfunction pyramid(n) {\r\n    const midpoint = Math.floor((2 * n - 1) / 2);\r\n    for(let row = 0; row < n; row++){\r\n        let level = '';\r\n\r\n        for(let column = 0; column < 2 * n - 1; column++){\r\n            if(midpoint - row <= column && midpoint + row >= column){\r\n                level += '#'\r\n            }else{\r\n                level += ' '\r\n            }\r\n        }\r\n        console.log(level);\r\n    }\r\n}\r\n\r\nmodule.exports = pyramid;\r\n"]}